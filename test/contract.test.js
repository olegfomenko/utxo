const UTXO = artifacts.require("UTXO");
const EllipticCurve = artifacts.require("EllipticCurve");
const BigNumber = require("bignumber.js");
const { ethers } = require("hardhat");

describe("UTXO", () => {

  let lib;
  let libContract;
  let utxo;
  let utxoContract;

  //Private key: 0x396bf027fd97d81d6c8da1d8415342ce95018d109d0d616e3821dc2c768c8ddb
  let proof = {"_e0":"38857503629944595140554674379927625174805812880748738429801047173635600314774","_c":[{"_x":"23292362897887211554448074037240339305158568633325588707577127212336134604625","_y":"61517656597798877816424040741961073462069344426276394849768573604376482985975"},{"_x":"22627340907913258251487878706582692854170039527562489793131497783587657924989","_y":"46198825159855767103763604215428204042383272515809239780559802417543287774217"},{"_x":"11061529577353586523168495812209500479460484114963805372013220401291678037804","_y":"26276395486158457236797419555883941663612033078618079984646939302030631370478"},{"_x":"70629094418045398519271162679056729283928460233256362237911714690203044951202","_y":"6965916102681412187485944231361527591250749402073882040744307525991992295959"},{"_x":"42373119911540874600930399445640219832887042012239529019792515163888961641933","_y":"66816236600056081092987637460745961449250498005671043545494080601205305978750"},{"_x":"12089614914548412156813726522007057380765528215985363441347937504717676777685","_y":"37772567161173395683757392003233694101695873521514061896471661377101884463658"},{"_x":"33519550323880610399048625003728468726500244882651703716203042316843020984875","_y":"65079332357298691927301327100789933658555255116608601334744812448982613097558"},{"_x":"29379575389460188160633204637255684521125381429668981812961370701690641554681","_y":"94245135583895286375180811640979216302933145975775485936137100262270831606890"}],"_s":["98879114227688165229999710088732296905879619556791671002021302212214610516390","68801859479976749480244510185267634504026182102478099743106339959520063940418","59742588034827818785533006483636645800804691706948629388146861411761062309370","110836614820977098690758235993640385594830203674244555507930245583340719742765","94681039541083716168001886140315794503756049371232838651681056546294808169803","51990400139746275777212316765372277539465802896188280087247233159132004526572","105460894672231243964696867783724140258735649265372702691880914098512295366069","85071383826056257569709454044518250557726151837943179705479102563464020732644"]}
  let commitment = {"_x": "106822260939551503198589301923008116454829341326513063233824902547145809391911", "_y": "73277090177798567518183381274815269749559472809817251906040100694996164816460"}

  beforeEach(async ()=> {
    lib = await ethers.getContractFactory("EllipticCurve");
    libContract = await lib.deploy();

    utxo = await ethers.getContractFactory("UTXO",
      {
        libraries: {
          EllipticCurve: libContract.address,
        }
      }
    );

    utxoContract = await utxo.deploy()
  });


  it("Deposit 100wei", async() => {
    // Private key: 0x13e4d2c57b16241a763047bf8f862ab630857592a18819f37b9b3c9e8567de65
    let tx = await utxoContract.deposit({"_x": "15639559675625734025795989354902210429480226575270834412335467657634556514696", "_y": "13808122845547863717923179222109646155746415390670120415468336630118037023431"}, { value: "100"});
    let utxoCreated = await utxoContract.utxos(0);
    console.log(utxoCreated);
  });
  //
  // it("Range proof", async() => {
  //   await utxoContract.verifyRangeProof(commitment, proof);
  // });

  // it("Initialize UTXO", async() => {
  //   await utxoContract.initialize(commitment, proof);
  // });

  // it("Transfer flow", async() => {
  //   let txDepositUTXO = await utxoContract.deposit({"_x": "14734274792892250538583130710326688001821315279524611705412636079378106838212", "_y": "12843510926868596022450520986186966252357342112722560806171712712835363742964"}, { value: "100"});
  //   let utxoCreated = await utxoContract.utxos(txDepositUTXO.v);
  //   console.log(utxoCreated);
  //
  //
  //   let txInitializeUTXO = await utxoContract.initialize(commitment, proof)
  //   utxoCreated = await utxoContract.utxos(txInitializeUTXO.v);
  //   console.log(utxoCreated);
  // })
});