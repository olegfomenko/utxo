const UTXO = artifacts.require("UTXO");
const EllipticCurve = artifacts.require("EllipticCurve");
const BigNumber = require("bignumber.js");
const { ethers } = require("hardhat");

describe("UTXO", () => {

  let lib;
  let libContract;
  let utxo;
  let utxoContract;

  //Private key: 0x1f9087ef984d601d1f63e80bfea1606623c3a1f90d0f2bf7be7d15dca7d872bb
  let proof = {"_e0":"3050180454335147906097181968053231742918579789084550009514678591562009752049","_c":[{"_x":"14788839595954749266725910761176906251178270042688659254861506119438057326575","_y":"21180353261053486361243369154385839263098122206056660872625579624601180069980"},{"_x":"3011650395914513706144190224662087506230546214106497651838834661704186505736","_y":"3579461762832553712145824039915249796562242327321260901634191408056825967786"},{"_x":"16179193655227271850126225348452820078202552634397041889438852293489345965056","_y":"7355195247639518907801515540473155889470432018508786517348126819882295334803"},{"_x":"8938019944680637342863358913017982736037537276237502565184205311778425592069","_y":"13269040184341775139209283653109845907078973453601147455980224520584144001031"},{"_x":"2267382119348157358609395559771872265278097677958256463407950463427301546655","_y":"11753730778951424142621603863600045062067373602869377128144251968750189520738"},{"_x":"19549968014902711635897514315276688343778757235488731486673873799307757809579","_y":"11636870171446116555266458489127014940713093395019253977143473157542542578904"},{"_x":"17773041665110392887764873187347436901608230588669034595249924862022544875291","_y":"19677333891727366308775033245177619602477346118044959261812504011290020370042"},{"_x":"10639701109342977038942138524462223445456090083421774960808385341327292939482","_y":"21831804752818846029979692231818952268226869674581452294994053730785833490658"}],"_s":["18757063834062664428774992643656148195937672605900277359906411488448675976105","7978588654647825827166766611143011398818180816430905129092038431732211915722","8087051808446325759090511243774006536436496519113461553414527320009132863728","21656775917733307324095000123141590060616674940677969453934923276451307980815","20503615087708809115987386117344275422753192318342139504401918572333650818962","9895306173240807725549003234225102577115569386006361324476510046608296431592","12249629474023978217302852155052424733324499636553311006372620369960904649185","2083688867945855233356206227787093303856544091631601522506795126597677840704"]}
  let commitment = {"_x": "6313265247653690038269331227241584000748988170401658363768558749855790457574", "_y": "9144067110454132527769704087311546718265771986748025471014427982397433735489"}

  beforeEach(async ()=> {
    lib = await ethers.getContractFactory("EllipticCurve");
    libContract = await lib.deploy();

    utxo = await ethers.getContractFactory("UTXO",
      {
        libraries: {
          EllipticCurve: libContract.address,
        }
      }
    );

    utxoContract = await utxo.deploy()
  });


  // it("Deposit 100wei", async() => {
  //   // Private key: 0x13e4d2c57b16241a763047bf8f862ab630857592a18819f37b9b3c9e8567de65
  //   let tx = await utxoContract.deposit({"_x": "15639559675625734025795989354902210429480226575270834412335467657634556514696", "_y": "13808122845547863717923179222109646155746415390670120415468336630118037023431"}, { value: "100"});
  //   let utxoCreated = await utxoContract.utxos(0);
  //   console.log(utxoCreated);
  // });

  it("Range proof", async() => {
    await utxoContract.verifyRangeProof(commitment, proof);
  });

  // it("Initialize UTXO", async() => {
  //   await utxoContract.initialize(commitment, proof);
  // });

  // it("Transfer flow", async() => {
  //   let txDepositUTXO = await utxoContract.deposit({"_x": "14734274792892250538583130710326688001821315279524611705412636079378106838212", "_y": "12843510926868596022450520986186966252357342112722560806171712712835363742964"}, { value: "100"});
  //   let utxoCreated = await utxoContract.utxos(txDepositUTXO.v);
  //   console.log(utxoCreated);
  //
  //
  //   let txInitializeUTXO = await utxoContract.initialize(commitment, proof)
  //   utxoCreated = await utxoContract.utxos(txInitializeUTXO.v);
  //   console.log(utxoCreated);
  // })
});